Sf.MC <- sqrt(1/(n-1) * sum((f3(U)*(b-a) - Integral.MC)^2))
Error.MC <- Sf.MC / sqrt(n)
Error.MC
# Grafico Funcion
xi <- seq(from=-10,to=10,length.out=100)
Px <- rep(NA,100)
for(i in 1:100){
Px[i]<-f3(xi[i])
}
DF_Table <- data.frame(xi,Px)
#Area a sombrear:
xii <- seq(from=-2,to=5,length.out=100)
Pxx <- rep(NA,100)
for(i in 1:100){
Pxx[i]<-f3(xii[i])
}
DF_Table_sombreado <- data.frame(xii,Pxx)
Graf_2 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
scale_x_continuous(name = "xi", limits = c(-10,10), breaks = seq(-10,10, by = 1))+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_3 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
scale_x_continuous(name = "xi", limits = c(-10,10), breaks = seq(-10,10, by = 1))+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_3
Graf_3 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
scale_x_continuous(name = "xi", limits = c(-5,10), breaks = seq(-5,10, by = 1))+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_3
Graf_3 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
scale_x_continuous(name = "xi", limits = c(-5,7), breaks = seq(-5,7, by = 1))+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_3
Graf_3 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
scale_x_continuous(name = "xi", limits = c(-5,7), breaks = seq(-5,7, by = 1))+
scale_y_continuous(name = "Px", limits = c(-100,500), breaks = seq(-100,500, by = 50))+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_3
#D ----
f4 <- function(x){x * ln(x^3) + 12 *cos(x)}
n<-10000
a=12
b=20
U<- a + (b-a) * runif(n)
Altura.Promedio <- 1/n * sum(f4(U))
Ancho.Base <- b - a
Integral.MC <- Altura.Promedio * Ancho.Base
#D ----
f4 <- function(x){x * log(x^3) + 12 *cos(x)}
n<-10000
a=12
b=20
U<- a + (b-a) * runif(n)
Altura.Promedio <- 1/n * sum(f4(U))
Ancho.Base <- b - a
Integral.MC <- Altura.Promedio * Ancho.Base
Integral.MC
Sf.MC <- sqrt(1/(n-1) * sum((f4(U)*(b-a) - Integral.MC)^2))
Error.MC <- Sf.MC / sqrt(n)
Error.MC
# Grafico Funcion
xi <- seq(from=5,to=25,length.out=100)
Px <- rep(NA,100)
for(i in 1:100){
Px[i]<-f4(xi[i])
}
DF_Table <- data.frame(xi,Px)
#Area a sombrear:
xii <- seq(from=12,to=20,length.out=100)
Pxx <- rep(NA,100)
for(i in 1:100){
Pxx[i]<-f4(xii[i])
}
DF_Table_sombreado <- data.frame(xii,Pxx)
Graf_4 <- ggplot(data = DF_Table,aes(x = xi, y = Px))+
geom_line(colour = "green", size = 1)+
geom_area(data = DF_Table_sombreado, aes(x=xii, y=Pxx))+
geom_vline(xintercept=0)+
geom_hline(yintercept=0)+
ggtitle("Integral.MC")+
xlab("Eje x")+
ylab("Eje y")+
theme_light()
Graf_4
#Para hacerlo para una muestra de 10000
M <- 10000
#Para hacerlo para una muestra de 10000
M <- 10000
resultado <- matrix(NA , nrow = M, ncol = 2)
for (m in 1:M) {
#numero de siniestros se distribuye Binomial n=1200, p = 0.7984
N <- rbinom(1,1200,0.7984)
resultado[m,1] <- N
#Monto de los siniestros se distribuye Chi-Cuadrado con 2 grados de libertad
xi <- rchisq(n = N, df = 2)
S <- sum(xi)
resultado[m,2] <- S
}
N.E <- mean(resultado[,1]) #Esperanza del numero de siniestros
N.Var <- var(resultado[,1])#Varianza del numero de siniestros
ES <- mean(resultado[,2])#Esperanza de S
Des <- sd(resultado[,2])#Desvio Estandar de S
N.E
N.Var
ES
Des
#Para hacerlo para una muestra de 10000
M <- 10000
resultado <- matrix(NA , nrow = M, ncol = 2)
for (m in 1:M) {
#numero de siniestros se distribuye Binomial n=1200, p = 0.7984
N <- rbinom(1,1200,0.7984)
resultado[m,1] <- N
#Monto de los siniestros se distribuye Chi-Cuadrado con 2 grados de libertad
xi <- rchisq(n = N, df = 2)
S <- sum(xi)
resultado[m,2] <- S
}
N.E <- mean(resultado[,1]) #Esperanza del numero de siniestros
N.Var <- var(resultado[,1])#Varianza del numero de siniestros
ES <- mean(resultado[,2])#Esperanza de S
Des <- sd(resultado[,2])#Desvio Estandar de S
#Para hacerlo para una muestra de 10000
M <- 10000
resultado <- matrix(NA , nrow = M, ncol = 2)
for (m in 1:M) {
#numero de siniestros se distribuye Binomial n=1200, p = 0.7984
N <- rbinom(1,1200,0.7984)
resultado[m,1] <- N
#Monto de los siniestros se distribuye Chi-Cuadrado con 2 grados de libertad
xi <- rchisq(n = N, df = 2)
S <- sum(xi)
resultado[m,2] <- S
}
N.E <- mean(resultado[,1]) #Esperanza del numero de siniestros
N.Var <- var(resultado[,1])#Varianza del numero de siniestros
ES <- mean(resultado[,2])#Esperanza de S
Des <- sd(resultado[,2])#Desvio Estandar de S
install.packages("quantmod")
library(quantmod)
getSymbols("YPFD.BA",auto.assign = TRUE, src = "yahoo")
View(YPFD.BA)
#Traigo el DataFrame con los precios de MELI y elijo el AJUSTADO al 6-11-2020
getSymbols("MELI.BA",auto.assign = TRUE, src = "yahoo")
View(MELI.BA)
#SIMULACION PARA YPF
P0 <- 555.40
mu<-0.15
sigma <- 0.20
T <- 1
n= 10000
e<- rnorm(n)
PT <- matrix(NA, nrow = n,ncol=1)
PT <- P0 *exp((mu-0.5 * sigma^2)*T + sigma *sqrt(T) *e)
#METRICAS
prob <- 0.95
quantile(PT,prob)
mean(PT)
quantile(PT, 1- prob)
#METRICAS
quantile(PT,0.975)
quantile(PT, 0.025)
#METRICAS
LSYPF <- quantile(PT,0.975)
PTesperadoYPF <- mean(PT)
LIYPF <- quantile(PT, 0.025)
#SIMULACION PARA MELI
P0 <- 3704.0
mu<-0.12
sigma <- 0.19
T <- 1
n= 10000
e<- rnorm(n)
PT <- matrix(NA, nrow = n,ncol=1)
PT <- P0 *exp((mu-0.5 * sigma^2)*T + sigma *sqrt(T) *e)
#METRICAS PARA MELI
LSMELI <- quantile(PT,0.975)
PTesperadoMELI <- mean(PT)
LIMELI <- quantile(PT, 0.025)
quantile(PT,0.975)
mean(PT)
quantile(PT, 0.025)
#SIMULACION PARA YPF
P0 <- 555.40
mu<-0.15
sigma <- 0.20
T <- 1
n= 10000
e<- rnorm(n)
PT <- matrix(NA, nrow = n,ncol=1)
PT <- P0 *exp((mu-0.5 * sigma^2)*T + sigma *sqrt(T) *e)
#METRICAS PARA YPF
LSYPF <- quantile(PT,0.975)
PTesperadoYPF <- mean(PT)
LIYPF <- quantile(PT, 0.025)
#RENDIMIENTOS LOGARITMICOS YPF
RL <- log(PT / PO)
#SIMULACION PARA YPF
P0 <- 555.40
mu<-0.15
sigma <- 0.20
T <- 1
n= 10000
e<- rnorm(n)
PT <- matrix(NA, nrow = n,ncol=1)
PT <- P0 *exp((mu-0.5 * sigma^2)*T + sigma *sqrt(T) *e)
#METRICAS PARA YPF
LSYPF <- quantile(PT,0.975)
PTesperadoYPF <- mean(PT)
LIYPF <- quantile(PT, 0.025)
#RENDIMIENTOS LOGARITMICOS YPF
RL <- log(PT / PO)
mean(RL)
#RENDIMIENTOS LOGARITMICOS YPF
RL <- log(PT / P0)
mean(RL)
#SIMULACION PARA MELI
P0 <- 3704.0
mu<-0.12
sigma <- 0.19
T <- 1
n= 10000
e<- rnorm(n)
PT <- matrix(NA, nrow = n,ncol=1)
PT <- P0 *exp((mu-0.5 * sigma^2)*T + sigma *sqrt(T) *e)
#METRICAS PARA MELI
LSMELI <- quantile(PT,0.975)
PTesperadoMELI <- mean(PT)
LIMELI <- quantile(PT, 0.025)
#RENDIMIENTOS LOGARITMICOS PARA MELI
RL <- log(PT / P0)
mean(RL)
#Parametros
P0 <- c(555.40,3704.0,54)
mu <- c(0.15,0.12,0.3)
sigma <- c(0.2,0.19,0.42)
T = 1
n=10000
Rho <-diag(3)
Rho[1,2]<-Rho[2,1]<-0.90 #Corr entre el rendimineto del act 1 y 2
Rho[1,3]<-Rho[3,1]<-0.70 # corr entre el rend del act 1 y 3
Rho[2,3]<-Rho[3,2]<-0.60 #corr entre el rend del activo 2 y 3
#Matriz de Cholesku
CH <- chol(Rho)
Z<- matrix(rnorm(3*n),nrow = n, ncol=3)
e<-z%*%CH
e<-Z%*%CH
PC <- matrix(NA, n , 3)
for (i in 1:n) {
for(k in 1:3){
PC[i,k] <- P0[k] *exp((mu[k] - 0.5* sigma[k]^2)*T +sigma[k] * sqrt(T) * e[i,k])
}
}
#EstadisticasYPF
PrecioEsperadoYPF <- mean(PC[,1])
LSYPF <- quantile(PC[,1],0.975)
LIYPF<-quantile(PC[,1],0.025)
PrecioEsperadoYPF
LSYPF
LIYPF
PrecioEsperadoMELI
#Estadisticas MELI
PrecioEsperadoMELI <- mean(PC[,2])
LSMELI <- quantile(PC[,2],0.975)
LIMELI<-quantile(PC[,2],0.025)
PrecioEsperadoMELI
LSMELI
LIMELI
#Estadisticas LOMA
PrecioEsperadoLOMA <- mean(PC[,3])
LSLOMA <- quantile(PC[,3],0.975)
LILOMA<-quantile(PC[,3],0.025)
PrecioEsperadoLOMA
PrecioEsperadoLOMA
PrecioEsperadoLOMA
PrecioEsperadoLOMA
PrecioEsperadoLOMA
PrecioEsperadoLOMA
PrecioEsperadoLOMA
LSLOMA
LILOMA
#Parametros
P0 <- c(555.40,3704.139.0500)
#Parametros
P0 <- c(555.40,3704,139.0500)
mu <- c(0.15,0.12,0.3)
sigma <- c(0.2,0.19,0.42)
T = 1
n=10000
Rho <-diag(3)
Rho[1,2]<-Rho[2,1]<-0.90 #Corr entre el rendimineto del act 1 y 2
Rho[1,3]<-Rho[3,1]<-0.70 # corr entre el rend del act 1 y 3
Rho[2,3]<-Rho[3,2]<-0.60 #corr entre el rend del activo 2 y 3
#Matriz de Cholesku
CH <- chol(Rho)
Z<- matrix(rnorm(3*n),nrow = n, ncol=3)
e<-Z%*%CH
PC <- matrix(NA, n , 3)
for (i in 1:n) {
for(k in 1:3){
PC[i,k] <- P0[k] *exp((mu[k] - 0.5* sigma[k]^2)*T +sigma[k] * sqrt(T) * e[i,k])
}
}
#EstadisticasYPF
PrecioEsperadoYPF <- mean(PC[,1])
LSYPF <- quantile(PC[,1],0.975)
LIYPF<-quantile(PC[,1],0.025)
#Estadisticas MELI
PrecioEsperadoMELI <- mean(PC[,2])
LSMELI <- quantile(PC[,2],0.975)
LIMELI<-quantile(PC[,2],0.025)
#Estadisticas LOMA
PrecioEsperadoLOMA <- mean(PC[,3])
LSLOMA <- quantile(PC[,3],0.975)
LILOMA<-quantile(PC[,3],0.025)
PrecioEsperadoLOMA
LSLOMA
LILOMA
#Rendimientos logaritmicos
P0.m <- matrix(rep(P0,n),n,3,byrow = TRUE)
RLc <- log(PC / P0.m)
mean(RLc[,1])
mean(RLc[,2])  #Rendimientos esperados de cada activo
mean(RLc[,3])
#GRAFICOS
par(mfrow=c(1,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
#GRAFICOS
par(mfrow=c(1,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
par(mfrow=c(1,3))
par(mfrow=c(1,3))
hist(RLc[,1])
hist(RLc[,2])
hist(RLc[,3])
hist(RLc[,1])
hist(RLc[,2])
hist(RLc[,3])
EJERCICIO 3
#Para el precio de las acciones utilizo la libreria "quantmod"
#install.packages("quantmod")
#library(quantmod)
#Traigo el DataFrame con los precios de YPF y elijo el AJUSTADO al 6-11-2020
getSymbols("YPFD.BA",auto.assign = TRUE, src = "yahoo")
PrecioYpf = 555.40
#Traigo el DataFrame con los precios de MELI y elijo el AJUSTADO al 6-11-2020
getSymbols("MELI.BA",auto.assign = TRUE, src = "yahoo")
PrecioMELI = 3704.0
##### A Y B ####
#PARAMETROS
P0 = c(PrecioYpf,PrecioMELI)
mu = c(0.15,0.12)
sigma = c(0.20,0.19)
T<- 1 #1 año
n<- 10000 #Simulo 10000 precios de cada activo
#Calculo las e
Z <- matrix(rnorm(2*n), nrow = n, ncol = 2)
cor(Z)
#SIMULO LOS PRECIOS
P<- matrix(NA,n,2)
for (i in 1:n) {
for (k in 1:3) {
P[i,k] <- P0[k] * exp((mu[k] - 0.5 * sigma[k]^2)*T + sigma[k] * sqrt(t) * Z[i,k])
}
}
#METRICAS
#EstadisticasYPF
PrecioEsperadoYPF <- mean(P[,1])
LSYPF <- quantile(P[,1],0.975)
LIYPF<-quantile(P[,1],0.025)
#Estadisticas MELI
PrecioEsperadoMELI <- mean(PC[,2])
LSMELI <- quantile(P[,2],0.975)
LIMELI<-quantile(P[,2],0.025)
#Rendimientos logaritmicos
P0.m <- matrix(rep(P0,n),n,2,byrow = TRUE)
RLc <- log(PC / P0.m)
mean(RLc[,1])
mean(RLc[,2])  #Rendimientos esperados de cada activo
#GRAFICOS
par(mfrow=c(2,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
plot(PC[,1],PC[,2])
par(mfrow=c(2,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
plot(P[,1],P[,2])
par(mfrow=c(2,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
plot(P[,1],P[,2])
par(mfrow=c(2,3))
plot(PC[,1],PC[,2])
plot(PC[,1],PC[,3])
plot(PC[,3],PC[,2])
plot(P[,1],P[,2])
PrecioYpf = 555.40
#Traigo el DataFrame con los precios de MELI y elijo el AJUSTADO al 6-11-2020
getSymbols("MELI.BA",auto.assign = TRUE, src = "yahoo")
PrecioMELI = 3704.0
##### A Y B ####
#PARAMETROS
P0 = c(PrecioYpf,PrecioMELI)
mu = c(0.15,0.12)
sigma = c(0.20,0.19)
T<- 1 #1 año
n<- 10000 #Simulo 10000 precios de cada activo
Z <- matrix(rnorm(2*n), nrow = n, ncol = 2)
#SIMULO LOS PRECIOS
P<- matrix(NA,n,2)
for (i in 1:n) {
for (k in 1:2) {
P[i,k] <- P0[k] * exp((mu[k] - 0.5 * sigma[k]^2)*T + sigma[k] * sqrt(t) * Z[i,k])
}
}
for (i in 1:n) {
for (k in 1:2) {
P[i,k] <- P0[k] * exp((mu[k] - 0.5 * sigma[k]^2)*T + sigma[k] * sqrt(T) * Z[i,k])
}
}
#METRICAS
#EstadisticasYPF
PrecioEsperadoYPF <- mean(P[,1])
LSYPF <- quantile(P[,1],0.975)
LIYPF<-quantile(P[,1],0.025)
#Estadisticas MELI
PrecioEsperadoMELI <- mean(PC[,2])
LSMELI <- quantile(P[,2],0.975)
LIMELI<-quantile(P[,2],0.025)
#Rendimientos logaritmicos
P0.m <- matrix(rep(P0,n),n,2,byrow = TRUE)
RLc <- log(PC / P0.m)
mean(RLc[,1])
mean(RLc[,2])  #Rendimientos esperados de cada activo
#Rendimientos logaritmicos
P0.m <- matrix(rep(P0,n),n,2,byrow = TRUE)
RL <- log(P / P0.m)
mean(RL[,1])
mean(RL[,2])  #Rendimientos esperados de cada activo
plot(P[,1],P[,2])
#### F ####
P0 = c(555.40,3704)
mu = c(0.15,0.12)
sigma = c(0.20,0.19)
T<- 1 #1 año
n<- 10000
Q <- c(200,120)
V0 <- Q * P0
Vi <- sum(V0)
#Valor de activos y valor total de la cartera
Q.n <- matrix(rep(Q,n), nrow = n, ncol = 2, byrow = T)
VT <- Q.n * P
VF <- matrix(rowSums(VT),n,1)
VF
#Rendimiento Esperado
RL.V <- log(VF/VI)
#Rendimiento Esperado
RL.V <- log(VF/Vi)
mean(RL.V)
mean(VF)
mean(VT[,1])
mean(VT[,2])
#Con acciones correlacionadas
VTc <- Q.n * PC
#Con acciones correlacionadas
VTc <- Q.n * PC[,1:2]
VFc <- matrix(rowSums(VTc), n ,1)
mean(VFc)
mean(VTc[,1]) #Valor esperado de la Cartera con las acciones de YPF
mean(VTc[,2]) #Valor esperado de la Cartera con las acciones de MELI
